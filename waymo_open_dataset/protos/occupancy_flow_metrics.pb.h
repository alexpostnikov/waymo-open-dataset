// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waymo_open_dataset/protos/occupancy_flow_metrics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto;
namespace waymo {
namespace open_dataset {
class OccupancyFlowMetrics;
class OccupancyFlowMetricsDefaultTypeInternal;
extern OccupancyFlowMetricsDefaultTypeInternal _OccupancyFlowMetrics_default_instance_;
class OccupancyFlowTaskConfig;
class OccupancyFlowTaskConfigDefaultTypeInternal;
extern OccupancyFlowTaskConfigDefaultTypeInternal _OccupancyFlowTaskConfig_default_instance_;
}  // namespace open_dataset
}  // namespace waymo
PROTOBUF_NAMESPACE_OPEN
template<> ::waymo::open_dataset::OccupancyFlowMetrics* Arena::CreateMaybeMessage<::waymo::open_dataset::OccupancyFlowMetrics>(Arena*);
template<> ::waymo::open_dataset::OccupancyFlowTaskConfig* Arena::CreateMaybeMessage<::waymo::open_dataset::OccupancyFlowTaskConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace waymo {
namespace open_dataset {

// ===================================================================

class OccupancyFlowTaskConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:waymo.open_dataset.OccupancyFlowTaskConfig) */ {
 public:
  OccupancyFlowTaskConfig();
  virtual ~OccupancyFlowTaskConfig();

  OccupancyFlowTaskConfig(const OccupancyFlowTaskConfig& from);
  OccupancyFlowTaskConfig(OccupancyFlowTaskConfig&& from) noexcept
    : OccupancyFlowTaskConfig() {
    *this = ::std::move(from);
  }

  inline OccupancyFlowTaskConfig& operator=(const OccupancyFlowTaskConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline OccupancyFlowTaskConfig& operator=(OccupancyFlowTaskConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OccupancyFlowTaskConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OccupancyFlowTaskConfig* internal_default_instance() {
    return reinterpret_cast<const OccupancyFlowTaskConfig*>(
               &_OccupancyFlowTaskConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OccupancyFlowTaskConfig& a, OccupancyFlowTaskConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(OccupancyFlowTaskConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OccupancyFlowTaskConfig* New() const final {
    return CreateMaybeMessage<OccupancyFlowTaskConfig>(nullptr);
  }

  OccupancyFlowTaskConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OccupancyFlowTaskConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OccupancyFlowTaskConfig& from);
  void MergeFrom(const OccupancyFlowTaskConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OccupancyFlowTaskConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "waymo.open_dataset.OccupancyFlowTaskConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto);
    return ::descriptor_table_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentPointsPerSideWidthFieldNumber = 11,
    kNumPastStepsFieldNumber = 1,
    kNumFutureStepsFieldNumber = 2,
    kNumWaypointsFieldNumber = 3,
    kGridHeightCellsFieldNumber = 5,
    kGridWidthCellsFieldNumber = 6,
    kSdcYInGridFieldNumber = 7,
    kSdcXInGridFieldNumber = 8,
    kCumulativeWaypointsFieldNumber = 4,
    kNormalizeSdcYawFieldNumber = 12,
    kPixelsPerMeterFieldNumber = 9,
    kAgentPointsPerSideLengthFieldNumber = 10,
  };
  // optional int32 agent_points_per_side_width = 11 [default = 16];
  bool has_agent_points_per_side_width() const;
  void clear_agent_points_per_side_width();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_points_per_side_width() const;
  void set_agent_points_per_side_width(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_past_steps = 1 [default = 10];
  bool has_num_past_steps() const;
  void clear_num_past_steps();
  ::PROTOBUF_NAMESPACE_ID::int32 num_past_steps() const;
  void set_num_past_steps(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_future_steps = 2 [default = 80];
  bool has_num_future_steps() const;
  void clear_num_future_steps();
  ::PROTOBUF_NAMESPACE_ID::int32 num_future_steps() const;
  void set_num_future_steps(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 num_waypoints = 3 [default = 8];
  bool has_num_waypoints() const;
  void clear_num_waypoints();
  ::PROTOBUF_NAMESPACE_ID::int32 num_waypoints() const;
  void set_num_waypoints(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 grid_height_cells = 5 [default = 256];
  bool has_grid_height_cells() const;
  void clear_grid_height_cells();
  ::PROTOBUF_NAMESPACE_ID::int32 grid_height_cells() const;
  void set_grid_height_cells(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 grid_width_cells = 6 [default = 256];
  bool has_grid_width_cells() const;
  void clear_grid_width_cells();
  ::PROTOBUF_NAMESPACE_ID::int32 grid_width_cells() const;
  void set_grid_width_cells(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 sdc_y_in_grid = 7 [default = 192];
  bool has_sdc_y_in_grid() const;
  void clear_sdc_y_in_grid();
  ::PROTOBUF_NAMESPACE_ID::int32 sdc_y_in_grid() const;
  void set_sdc_y_in_grid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 sdc_x_in_grid = 8 [default = 128];
  bool has_sdc_x_in_grid() const;
  void clear_sdc_x_in_grid();
  ::PROTOBUF_NAMESPACE_ID::int32 sdc_x_in_grid() const;
  void set_sdc_x_in_grid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool cumulative_waypoints = 4 [default = true];
  bool has_cumulative_waypoints() const;
  void clear_cumulative_waypoints();
  bool cumulative_waypoints() const;
  void set_cumulative_waypoints(bool value);

  // optional bool normalize_sdc_yaw = 12 [default = true];
  bool has_normalize_sdc_yaw() const;
  void clear_normalize_sdc_yaw();
  bool normalize_sdc_yaw() const;
  void set_normalize_sdc_yaw(bool value);

  // optional float pixels_per_meter = 9 [default = 3.2];
  bool has_pixels_per_meter() const;
  void clear_pixels_per_meter();
  float pixels_per_meter() const;
  void set_pixels_per_meter(float value);

  // optional int32 agent_points_per_side_length = 10 [default = 48];
  bool has_agent_points_per_side_length() const;
  void clear_agent_points_per_side_length();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_points_per_side_length() const;
  void set_agent_points_per_side_length(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:waymo.open_dataset.OccupancyFlowTaskConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_points_per_side_width_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_past_steps_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_future_steps_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_waypoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 grid_height_cells_;
  ::PROTOBUF_NAMESPACE_ID::int32 grid_width_cells_;
  ::PROTOBUF_NAMESPACE_ID::int32 sdc_y_in_grid_;
  ::PROTOBUF_NAMESPACE_ID::int32 sdc_x_in_grid_;
  bool cumulative_waypoints_;
  bool normalize_sdc_yaw_;
  float pixels_per_meter_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_points_per_side_length_;
  friend struct ::TableStruct_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto;
};
// -------------------------------------------------------------------

class OccupancyFlowMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:waymo.open_dataset.OccupancyFlowMetrics) */ {
 public:
  OccupancyFlowMetrics();
  virtual ~OccupancyFlowMetrics();

  OccupancyFlowMetrics(const OccupancyFlowMetrics& from);
  OccupancyFlowMetrics(OccupancyFlowMetrics&& from) noexcept
    : OccupancyFlowMetrics() {
    *this = ::std::move(from);
  }

  inline OccupancyFlowMetrics& operator=(const OccupancyFlowMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline OccupancyFlowMetrics& operator=(OccupancyFlowMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OccupancyFlowMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OccupancyFlowMetrics* internal_default_instance() {
    return reinterpret_cast<const OccupancyFlowMetrics*>(
               &_OccupancyFlowMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OccupancyFlowMetrics& a, OccupancyFlowMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(OccupancyFlowMetrics* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OccupancyFlowMetrics* New() const final {
    return CreateMaybeMessage<OccupancyFlowMetrics>(nullptr);
  }

  OccupancyFlowMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OccupancyFlowMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OccupancyFlowMetrics& from);
  void MergeFrom(const OccupancyFlowMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OccupancyFlowMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "waymo.open_dataset.OccupancyFlowMetrics";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto);
    return ::descriptor_table_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVehiclesObservedAucFieldNumber = 1,
    kVehiclesObservedIouFieldNumber = 2,
    kVehiclesOccludedAucFieldNumber = 3,
    kVehiclesOccludedIouFieldNumber = 4,
    kVehiclesFlowEpeFieldNumber = 5,
    kVehiclesFlowWarpedOccupancyAucFieldNumber = 6,
    kVehiclesFlowWarpedOccupancyIouFieldNumber = 7,
  };
  // optional float vehicles_observed_auc = 1;
  bool has_vehicles_observed_auc() const;
  void clear_vehicles_observed_auc();
  float vehicles_observed_auc() const;
  void set_vehicles_observed_auc(float value);

  // optional float vehicles_observed_iou = 2;
  bool has_vehicles_observed_iou() const;
  void clear_vehicles_observed_iou();
  float vehicles_observed_iou() const;
  void set_vehicles_observed_iou(float value);

  // optional float vehicles_occluded_auc = 3;
  bool has_vehicles_occluded_auc() const;
  void clear_vehicles_occluded_auc();
  float vehicles_occluded_auc() const;
  void set_vehicles_occluded_auc(float value);

  // optional float vehicles_occluded_iou = 4;
  bool has_vehicles_occluded_iou() const;
  void clear_vehicles_occluded_iou();
  float vehicles_occluded_iou() const;
  void set_vehicles_occluded_iou(float value);

  // optional float vehicles_flow_epe = 5;
  bool has_vehicles_flow_epe() const;
  void clear_vehicles_flow_epe();
  float vehicles_flow_epe() const;
  void set_vehicles_flow_epe(float value);

  // optional float vehicles_flow_warped_occupancy_auc = 6;
  bool has_vehicles_flow_warped_occupancy_auc() const;
  void clear_vehicles_flow_warped_occupancy_auc();
  float vehicles_flow_warped_occupancy_auc() const;
  void set_vehicles_flow_warped_occupancy_auc(float value);

  // optional float vehicles_flow_warped_occupancy_iou = 7;
  bool has_vehicles_flow_warped_occupancy_iou() const;
  void clear_vehicles_flow_warped_occupancy_iou();
  float vehicles_flow_warped_occupancy_iou() const;
  void set_vehicles_flow_warped_occupancy_iou(float value);

  // @@protoc_insertion_point(class_scope:waymo.open_dataset.OccupancyFlowMetrics)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float vehicles_observed_auc_;
  float vehicles_observed_iou_;
  float vehicles_occluded_auc_;
  float vehicles_occluded_iou_;
  float vehicles_flow_epe_;
  float vehicles_flow_warped_occupancy_auc_;
  float vehicles_flow_warped_occupancy_iou_;
  friend struct ::TableStruct_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OccupancyFlowTaskConfig

// optional int32 num_past_steps = 1 [default = 10];
inline bool OccupancyFlowTaskConfig::has_num_past_steps() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_num_past_steps() {
  num_past_steps_ = 10;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::num_past_steps() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.num_past_steps)
  return num_past_steps_;
}
inline void OccupancyFlowTaskConfig::set_num_past_steps(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_past_steps_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.num_past_steps)
}

// optional int32 num_future_steps = 2 [default = 80];
inline bool OccupancyFlowTaskConfig::has_num_future_steps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_num_future_steps() {
  num_future_steps_ = 80;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::num_future_steps() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.num_future_steps)
  return num_future_steps_;
}
inline void OccupancyFlowTaskConfig::set_num_future_steps(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_future_steps_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.num_future_steps)
}

// optional int32 num_waypoints = 3 [default = 8];
inline bool OccupancyFlowTaskConfig::has_num_waypoints() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_num_waypoints() {
  num_waypoints_ = 8;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::num_waypoints() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.num_waypoints)
  return num_waypoints_;
}
inline void OccupancyFlowTaskConfig::set_num_waypoints(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_waypoints_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.num_waypoints)
}

// optional bool cumulative_waypoints = 4 [default = true];
inline bool OccupancyFlowTaskConfig::has_cumulative_waypoints() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_cumulative_waypoints() {
  cumulative_waypoints_ = true;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool OccupancyFlowTaskConfig::cumulative_waypoints() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.cumulative_waypoints)
  return cumulative_waypoints_;
}
inline void OccupancyFlowTaskConfig::set_cumulative_waypoints(bool value) {
  _has_bits_[0] |= 0x00000100u;
  cumulative_waypoints_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.cumulative_waypoints)
}

// optional bool normalize_sdc_yaw = 12 [default = true];
inline bool OccupancyFlowTaskConfig::has_normalize_sdc_yaw() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_normalize_sdc_yaw() {
  normalize_sdc_yaw_ = true;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool OccupancyFlowTaskConfig::normalize_sdc_yaw() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.normalize_sdc_yaw)
  return normalize_sdc_yaw_;
}
inline void OccupancyFlowTaskConfig::set_normalize_sdc_yaw(bool value) {
  _has_bits_[0] |= 0x00000200u;
  normalize_sdc_yaw_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.normalize_sdc_yaw)
}

// optional int32 grid_height_cells = 5 [default = 256];
inline bool OccupancyFlowTaskConfig::has_grid_height_cells() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_grid_height_cells() {
  grid_height_cells_ = 256;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::grid_height_cells() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.grid_height_cells)
  return grid_height_cells_;
}
inline void OccupancyFlowTaskConfig::set_grid_height_cells(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  grid_height_cells_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.grid_height_cells)
}

// optional int32 grid_width_cells = 6 [default = 256];
inline bool OccupancyFlowTaskConfig::has_grid_width_cells() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_grid_width_cells() {
  grid_width_cells_ = 256;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::grid_width_cells() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.grid_width_cells)
  return grid_width_cells_;
}
inline void OccupancyFlowTaskConfig::set_grid_width_cells(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  grid_width_cells_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.grid_width_cells)
}

// optional int32 sdc_y_in_grid = 7 [default = 192];
inline bool OccupancyFlowTaskConfig::has_sdc_y_in_grid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_sdc_y_in_grid() {
  sdc_y_in_grid_ = 192;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::sdc_y_in_grid() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.sdc_y_in_grid)
  return sdc_y_in_grid_;
}
inline void OccupancyFlowTaskConfig::set_sdc_y_in_grid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  sdc_y_in_grid_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.sdc_y_in_grid)
}

// optional int32 sdc_x_in_grid = 8 [default = 128];
inline bool OccupancyFlowTaskConfig::has_sdc_x_in_grid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_sdc_x_in_grid() {
  sdc_x_in_grid_ = 128;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::sdc_x_in_grid() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.sdc_x_in_grid)
  return sdc_x_in_grid_;
}
inline void OccupancyFlowTaskConfig::set_sdc_x_in_grid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  sdc_x_in_grid_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.sdc_x_in_grid)
}

// optional float pixels_per_meter = 9 [default = 3.2];
inline bool OccupancyFlowTaskConfig::has_pixels_per_meter() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_pixels_per_meter() {
  pixels_per_meter_ = 3.2f;
  _has_bits_[0] &= ~0x00000400u;
}
inline float OccupancyFlowTaskConfig::pixels_per_meter() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.pixels_per_meter)
  return pixels_per_meter_;
}
inline void OccupancyFlowTaskConfig::set_pixels_per_meter(float value) {
  _has_bits_[0] |= 0x00000400u;
  pixels_per_meter_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.pixels_per_meter)
}

// optional int32 agent_points_per_side_length = 10 [default = 48];
inline bool OccupancyFlowTaskConfig::has_agent_points_per_side_length() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_agent_points_per_side_length() {
  agent_points_per_side_length_ = 48;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::agent_points_per_side_length() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.agent_points_per_side_length)
  return agent_points_per_side_length_;
}
inline void OccupancyFlowTaskConfig::set_agent_points_per_side_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  agent_points_per_side_length_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.agent_points_per_side_length)
}

// optional int32 agent_points_per_side_width = 11 [default = 16];
inline bool OccupancyFlowTaskConfig::has_agent_points_per_side_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupancyFlowTaskConfig::clear_agent_points_per_side_width() {
  agent_points_per_side_width_ = 16;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 OccupancyFlowTaskConfig::agent_points_per_side_width() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowTaskConfig.agent_points_per_side_width)
  return agent_points_per_side_width_;
}
inline void OccupancyFlowTaskConfig::set_agent_points_per_side_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  agent_points_per_side_width_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowTaskConfig.agent_points_per_side_width)
}

// -------------------------------------------------------------------

// OccupancyFlowMetrics

// optional float vehicles_observed_auc = 1;
inline bool OccupancyFlowMetrics::has_vehicles_observed_auc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_observed_auc() {
  vehicles_observed_auc_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float OccupancyFlowMetrics::vehicles_observed_auc() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_observed_auc)
  return vehicles_observed_auc_;
}
inline void OccupancyFlowMetrics::set_vehicles_observed_auc(float value) {
  _has_bits_[0] |= 0x00000001u;
  vehicles_observed_auc_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_observed_auc)
}

// optional float vehicles_observed_iou = 2;
inline bool OccupancyFlowMetrics::has_vehicles_observed_iou() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_observed_iou() {
  vehicles_observed_iou_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float OccupancyFlowMetrics::vehicles_observed_iou() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_observed_iou)
  return vehicles_observed_iou_;
}
inline void OccupancyFlowMetrics::set_vehicles_observed_iou(float value) {
  _has_bits_[0] |= 0x00000002u;
  vehicles_observed_iou_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_observed_iou)
}

// optional float vehicles_occluded_auc = 3;
inline bool OccupancyFlowMetrics::has_vehicles_occluded_auc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_occluded_auc() {
  vehicles_occluded_auc_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float OccupancyFlowMetrics::vehicles_occluded_auc() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_occluded_auc)
  return vehicles_occluded_auc_;
}
inline void OccupancyFlowMetrics::set_vehicles_occluded_auc(float value) {
  _has_bits_[0] |= 0x00000004u;
  vehicles_occluded_auc_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_occluded_auc)
}

// optional float vehicles_occluded_iou = 4;
inline bool OccupancyFlowMetrics::has_vehicles_occluded_iou() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_occluded_iou() {
  vehicles_occluded_iou_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float OccupancyFlowMetrics::vehicles_occluded_iou() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_occluded_iou)
  return vehicles_occluded_iou_;
}
inline void OccupancyFlowMetrics::set_vehicles_occluded_iou(float value) {
  _has_bits_[0] |= 0x00000008u;
  vehicles_occluded_iou_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_occluded_iou)
}

// optional float vehicles_flow_epe = 5;
inline bool OccupancyFlowMetrics::has_vehicles_flow_epe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_flow_epe() {
  vehicles_flow_epe_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float OccupancyFlowMetrics::vehicles_flow_epe() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_epe)
  return vehicles_flow_epe_;
}
inline void OccupancyFlowMetrics::set_vehicles_flow_epe(float value) {
  _has_bits_[0] |= 0x00000010u;
  vehicles_flow_epe_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_epe)
}

// optional float vehicles_flow_warped_occupancy_auc = 6;
inline bool OccupancyFlowMetrics::has_vehicles_flow_warped_occupancy_auc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_flow_warped_occupancy_auc() {
  vehicles_flow_warped_occupancy_auc_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float OccupancyFlowMetrics::vehicles_flow_warped_occupancy_auc() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_warped_occupancy_auc)
  return vehicles_flow_warped_occupancy_auc_;
}
inline void OccupancyFlowMetrics::set_vehicles_flow_warped_occupancy_auc(float value) {
  _has_bits_[0] |= 0x00000020u;
  vehicles_flow_warped_occupancy_auc_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_warped_occupancy_auc)
}

// optional float vehicles_flow_warped_occupancy_iou = 7;
inline bool OccupancyFlowMetrics::has_vehicles_flow_warped_occupancy_iou() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OccupancyFlowMetrics::clear_vehicles_flow_warped_occupancy_iou() {
  vehicles_flow_warped_occupancy_iou_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float OccupancyFlowMetrics::vehicles_flow_warped_occupancy_iou() const {
  // @@protoc_insertion_point(field_get:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_warped_occupancy_iou)
  return vehicles_flow_warped_occupancy_iou_;
}
inline void OccupancyFlowMetrics::set_vehicles_flow_warped_occupancy_iou(float value) {
  _has_bits_[0] |= 0x00000040u;
  vehicles_flow_warped_occupancy_iou_ = value;
  // @@protoc_insertion_point(field_set:waymo.open_dataset.OccupancyFlowMetrics.vehicles_flow_warped_occupancy_iou)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace open_dataset
}  // namespace waymo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_waymo_5fopen_5fdataset_2fprotos_2foccupancy_5fflow_5fmetrics_2eproto
